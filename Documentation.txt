Рабочая документация по использованию плагина USFE

==================================================

1.Основное
Плагин предназначен для простой стилизации различных элементов форм, обладает большим набором параметров, что позволяет гибко настроить его под свои нужды.
Плагин работает со следующими элементами:
input type="text"
input type="password"
input type="email"
input type="file"
input type="submit"
input type="reset"
input type="radio"
input type="checkbox"
input type="usfe-number";
input type="usfe-calendar"
button type="submit"
button type="reset"
button type="button"
select
textarea;

1.1.Использование
Для начала использования необходимо подключить jquery и ниже вызывать плагин:
$(elem).usfe({}); - вызов плагина без параметров, буду задействованы параметры по умолчанию.
elem -  может быть форма (form.order-form), тогда плагин обработает все дочерние элементы доступные для стилизации или непосредственно элемент который будет обработан (input[type="radio"])


1.2.Типы параметров
Параметры делятся по группам и каждая из них имеет свой префикс для удобства:
f_ - input file
n_ - input number (изменный input text)
t_ - input text
te_ - textarea
c_ - input checkbox
s_ - select option

1.3.Параметры по умолчанию
Стоит отметить параметры применяемые для всех типов элементов в плагине по умолчанию:
f_defaultFileName : 'Файл не выбран'
f_defaultFileNameDel : 'Файл не выбран'
f_FileNameLength : 30
f_defaultButtonName : 'Выбрать'
f_editButtonName : 'Изменить'
f_charDelete : '&#215;'
f_bgDelete: '#f48475'
---
n_iconPlus: '+'
n_iconMinus: '-'
n_editBg: true
---
t_animateEffect: true
t_animateSpeed: 400
t_editW: 12
t_editH: 3
t_color: '#FFF'
t_backgroundcolor: '#52626F'
---
te_animateEffect: true
te_animateSpeed: 400
te_color: '#FFF'
te_backgroundcolor: '#52626F'
---
c_styleCheckbox: 'style-1'
---
s_height: false
---
cal_animateSpeed: 200
cal_animateSwitch: false
cal_animateSwitchSpeed: 300

==================================================

2.Что делают параметры?

2.1.Параметры input type="file"
2.1.1.f_defaultFileName - начальное значение текста в поле для имени файла
2.1.2.f_defaultFileNameDel - значение текста после удаления выбранного файла
2.1.3.f_defaultButtonName - начальный текст кнопки для выбора файла
2.1.4.f_editButtonName - текст кнопки после выбора или удаления файла
2.1.5.f_charDelete - текст или другой html символ для кнопки удаления выбранного файла
2.1.6.f_bgDelete - фон обертки при нажатии на кнопку удаления выбранного файла

2.2.Параметры input type="usfe-number"
2.2.1.n_iconPlus - текст кнопки для увеличения значения в поле
2.2.2.n_iconMinus - текст кнопки для уменьшения значения в поле
2.2.3.n_editBg - будет ли меняться цвет

2.3.Параметры input type="text, password, email"
2.3.1.t_animateEffect - основной параметр, определяющий использовать ли эффекты анимации для поля
2.3.1.t_animateSpeed - скорость анимации поля
2.3.1.t_editW - на сколько px измениться ширина поля при получении фокуса
2.3.1.t_editH - на сколько px изменить высота поля при получении фокуса
2.3.1.t_color - цвет текста поля при получении фокуса
2.3.1.t_backgroundcolor - фоновый цвет поля при получении фокуса

2.4.Параметры textarea
2.4.1.te_animateEffect - основной параметр, определяющий использовать ли эффекты анимации для поля
2.4.2.te_animateSpeed - скорость анимации поля textarea
2.4.3.te_color - цвет текста поля при получении фокуса
2.4.4.te_backgroundcolor - фоновый цвет поля при получении фокуса

2.5.Параметры input type="checkbox"
2.5.1. - c_styleCheckbox - параметр изменяющий внешний вид элемента input

2.6.Параметры select option
2.6.1. - s_height - устанавливает высоту выпадающего меню, если контент превышает данное значение - появится полоса прокрутки

2.7.Параметры input type="usfe-calendar"
2.7.1. - cal_animateSpeed - устанавливает скорость появления/скрытия блока с календарем
2.7.2. - cal_animateSwitch - анимированное переключение месяцев календаря, передать true
2.7.3. - cal_animateSwitchSpeed - скорость анимированного переключения месяцев календаря

==================================================
 
3.Описание функций и методов плагина

3.1.Метод typeFile
3.1.1.Создание новых элементов и динамическая вставка их в DOM модель
3.1.2.Имитация клика по текущему Input file
3.1.3.Есть ли поддержка в file Api в браузере
3.1.4.Функция по событию change
3.1.5.Если есть поддержка file Api и файл получен
3.1.6.Если имя файла не получен, то return
3.1.7.Проверка на длинну имени файла, редактируется параметром.Добавление полного имени в атрибут title при обрезании в основном поле.Изменение поля с именем файла и текста на кнопки
3.1.8.Функция удаления выбранного файла
3.1.9.Кешируем this в переменную и запомним изначальный цвет фона обертки
3.1.10.Анимация скрытия и изменения фонового цвета обертки
3.1.11.Вызов с задержкой функции удаления файла
3.1.12.Функция удаления файла и замены текста

3.2.Метод typeNumber
3.2.1.Создание новых элементов и динамическая вставка их в DOM модель
3.2.2.Функция по клику на кнопку увеличения значения
3.2.3.Если параметр в значении true, при увеличении будет изменен цвет
3.2.4.Функция по клику на кнопку уменьшения значения
3.2.5.При отрицательном значении вернет 1
3.2.6.Если параметр в значении true, при уменьшении будет изменен цвет
3.2.7.Функция запрета ввода иных символов кроме чисел, а так же запуск функции итогового вычисления
3.2.8.Фунция итогового вычисления.Проверка на ошибки, присвоение полученных данных в value элемента для дальнейшей передачи серверу

3.3.Метод typeText
Пункты ниже отработают, если параметр t_animateEffect имеет значение true
3.3.1.Определение переменных для работы метода typeText
3.3.2.Задание css свойств
3.3.3.Функция отработает когда поле получается фокус
3.3.4.Функция отработает когда поле потеряет фокус

3.4.Метод typeButton
Обработает такие элементы формы как input type[submit, button, reset], button type[button, submit, reset] добавив к ним соответствующих класс

3.5.Метод typeTextarea
3.5.1.Сохраним базовые знания цвета текста и фона для поля textarea
3.5.2.Функция анимации по событию focus с 3 параметрами
3.5.3.Функция анимации по событию focusout с 3 параметрами

3.6.Метод typeRadio
3.6.1.Инициализация переменных
3.6.2.Вставка нового элемента и добавление класса
3.6.3.Добавление атрибутов для нового элемента
3.6.4.Добавление value для элементов input radio с помощью конструкции if
3.6.5.Функция по клику на созданный элемент, имитирующий radio
3.6.6.Удаление класса у всех элементов группы и добавление к выбранному элементу
3.6.7.Имитация клика по элементу input radio с помощью доп. атрибута data-radio
3.6.8.Удаление и добавление доп. класса для дальнейшей работы check-radio
3.6.9.Запустим функцию так же по клику на label

3.7.Метод typeCheckbox
3.7.1.Присвоим значение для переменной classCheckbox в зависимости от параметра
3.7.2.Инициализация переменных
3.7.3.Вставка новых элементых и добавление класса
3.7.4.Добавление value для элементов input checkbox с помощью конструкции if
3.7.5.При клике на customCheckbox Имитируем клик по input checkbox
3.7.6.Функция по клику на input checkbox

3.8.Метод typeSelect
3.8.1.Создание новых dom-элементов
3.8.2.Группировка созданных dom-элементов
3.8.3.Инициализация вспомогательных переменных и начало большого цикла для каждого элемента
option или optgroup.
Вставка сгенерированных элементов и атрибутов для них в dom-модель
3.8.3.1.Ветка для элементов optgroup:
	a.Получим класс текущей группы элементов optgroup.Создание текстовых переменных для классов, заголовка группы
	b.Цикл для дочерних элементов внутри optgroup
	c.Создание дополнительного атрибута 'data-opt' c уникальным значением для каждого элемента.Вставка новых элементов в текущий список
	d.Проверка на атрибут disabled для option.Выбор элемента с помощью атрибутов 'data-opt' 'data-li' путем добавления класса disabled к элементу списка li.
	f.Проверка на атрибут selected для option.Условие допускает не более одно элемента.Выбор элемента с помощью атрибутов 'data-opt' 'data-li' путем добавления класса selected к элементу списка li.
3.8.3.2.Ветка для элементов option:
	a.Получим текстовое значение текущего элемента в переменную.Создание нового li элемента со значением сохранненным в переменную
	b.Проверка на атрибут disabled для option.Выбор аналогичного элемента li по полученному индексу из коллекции  option и добавление соответствующего класса disabled
	с.Проверка на атрибут selected для option.Условие допускает не более одно элемента.Выбор аналогичного элемента li по полученному индексу из коллекции  option и добавление соответствующего класса selected
3.8.4.Если не один элемент по дефолту не выбран, первому элементу списка будет добавлен атрибут(класс) selected.С уловием, что у этого элемента нет атрибута disabled, иначе будет выбран следущий за ним.
3.8.5.Функция по клику на элемент selectThis включает в себя: Проверку активный ли элемент, Отслеживание положения arrow, появление/скрытие списка
3.8.6.Фукция по клику на элементу списка(элемент option) включает в себя: Проверку на неактивные классы и в следствии возвратит false, переключение классов выбранного элемента, скрытие списка после выбора, запуск функции для корректной работы arrow
3.8.7.Небольшая вспомогательная функция добавляющая класс hover-list для родителя при наведении на элемент элемент списка li
3.8.8.При клике на любом элементе страницы скрытие списка, кроме элементов для которых мы остановили "всплытие"
3.8.9.Функция работы со стрелками trigger для сгенерированных элементов
3.8.10.Участок кода отвечает за работу выпадающего списка с прокруткой, активируется установкой параметра s_height в отличное от false значение

3.9.Метод typeCalendar
3.9.1.Создание переменных и массивов для дальнейшей работы с ними
3.9.2.Основная функция calendarGenerator для генерации календаря
3.9.3.Внутренние переменные для получения данных о кол-ве дней, номер дня недели с которого начинается и с которого заканчивается текущий месяц
3.9.4.Создание шапки календаря с текущем месяцем, годом и стрелками для переключения 
3.9.5.Цикл сгенерирует названия дней недели из которые будут получены из массива
3.9.6.Цикл для добавления пустых ячеек в начало календаря
3.9.7.Цикл сгенерирует основые ячейки для календаря с  кол-вом дней в месяце от 1 до n, так же будет выделен текущий день
3.9.8.Цикл для добавления пустых ячеек в конец календаря
3.9.9.Выделение особым классом всех выходных дней - сб и вс
3.9.10.Функция показа даты в поле input, изначально будет запущена без параметров и покажет текущий дд-мм-гггг.
Далее запускается по клику на день в календаре и принимает на вход три параметра
3.9.11.Функция переключения на следующий месяц, данные принимает с помощью специальных атрибутов после чего происходит инкремент месяца, а при определенных условиях и года.Содержит в себе блок для анимации каледаря, а она в свою очередь вызов функции генерации след.месяца
3.9.12.Тоже что и в п 3.9.11 за исключением что происходят обратные действия, т.е операция декремента
3.9.13.Проверка был ли проинициализован элемент, нужна для нормальной работы с несколькими вызовами для одного элемента
3.9.14.Скрытие/Показ календаря при клике на кнопку с иконкой
3.9.15.Фунция запустится при клике на день в календаре, высчитает значения необходимых аргументов и вызовет с ними функцию показа выбранной даты в input
3.9.16.Скрытие календаря при клике по любой области, кроме него самого
==================================================

4.Кроссбраузерность

==================================================

5.Контроль ошибок

В случае ошибки инициализации элемента в консоле появится уведомление:
Ошибка! Элемент не может быть обработан:
div#test 

==================================================
